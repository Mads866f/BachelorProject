@using DTO.Models
@using Front.Services.ApiService.Elections
@using Front.Services.Elections
@using Front.Services.Interface.Elections

<MudPopover Open="true">
    <EditForm @bind-Model="_projectToCreate" OnValidSubmit="CreateProject">
        <MudGrid>
            <MudItem xs="3">
                <MudText Typo="Typo.h6">Name</MudText>
            </MudItem>
            <MudItem xs="3">
                <MudText Typo="Typo.h6">Cost</MudText>
            </MudItem>
            <MudItem xs="3">
                <MudText Typo="Typo.h6">Categories</MudText>
            </MudItem>
            <MudItem xs="3">
                <MudText Typo="Typo.h6">Targets</MudText>
            </MudItem>
            <MudDivider/>
            <MudItem xs="3">
                <MudInput T="string" @bind-value="_projectToCreate.Name">Name</MudInput>
            </MudItem>
            <MudItem xs="3">
                <MudInput T="int" @bind-value="_projectToCreate.Cost">Cost</MudInput>
            </MudItem>
            <MudItem xs="3">
                <MudAutocomplete T="string">Category</MudAutocomplete>
            </MudItem>
            <MudItem xs="3">
                <MudAutocomplete T="string">Target</MudAutocomplete>
            </MudItem>
            <MudItem xs="12">
                <MudButton Class="full-width-btn" ButtonType="ButtonType.Submit">Add Project</MudButton>
            </MudItem>

        </MudGrid>
    </EditForm>
</MudPopover>

@code
{

    [Inject] private IProjectsApiService _projectsApiService { get; set; }
    [Parameter] public Election election { get; set; }
    
    private Project _projectToCreate = new Project
    {
        Id = Guid.Empty,
        ElectionId = Guid.Empty,
        Name = "Name",
        Cost = 0,
        categories = [],
        targets = []
    };
    
    private void CreateProject()
    {
        _projectToCreate.ElectionId = election.Id;
        _projectToCreate.Id = Guid.NewGuid();
        _ = _projectsApiService.CreateProject(_projectToCreate);
        StateHasChanged();


    }
}
